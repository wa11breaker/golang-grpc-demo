// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: proto/cart.proto

package cart

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CartId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CartId) Reset() {
	*x = CartId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartId) ProtoMessage() {}

func (x *CartId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartId.ProtoReflect.Descriptor instead.
func (*CartId) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{0}
}

func (x *CartId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Brand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Brand) Reset() {
	*x = Brand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brand) ProtoMessage() {}

func (x *Brand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brand.ProtoReflect.Descriptor instead.
func (*Brand) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{1}
}

func (x *Brand) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Brand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{2}
}

func (x *Category) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AspectRatio string `protobuf:"bytes,1,opt,name=aspect_ratio,json=aspectRatio,proto3" json:"aspect_ratio,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	SecureUrl   string `protobuf:"bytes,3,opt,name=secure_url,json=secureUrl,proto3" json:"secure_url,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{3}
}

func (x *Image) GetAspectRatio() string {
	if x != nil {
		return x.AspectRatio
	}
	return ""
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Image) GetSecureUrl() string {
	if x != nil {
		return x.SecureUrl
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Url         string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ProductSlug []string `protobuf:"bytes,3,rep,name=product_slug,json=productSlug,proto3" json:"product_slug,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{4}
}

func (x *Action) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Action) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Action) GetProductSlug() []string {
	if x != nil {
		return x.ProductSlug
	}
	return nil
}

type Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Essential        string   `protobuf:"bytes,1,opt,name=essential,proto3" json:"essential,omitempty"`
	Gender           []string `protobuf:"bytes,2,rep,name=gender,proto3" json:"gender,omitempty"`
	PrimaryColor     string   `protobuf:"bytes,3,opt,name=primary_color,json=primaryColor,proto3" json:"primary_color,omitempty"`
	PrimaryMaterial  string   `protobuf:"bytes,4,opt,name=primary_material,json=primaryMaterial,proto3" json:"primary_material,omitempty"`
	NeckType         string   `protobuf:"bytes,5,opt,name=neck_type,json=neckType,proto3" json:"neck_type,omitempty"`
	Pattern          string   `protobuf:"bytes,6,opt,name=pattern,proto3" json:"pattern,omitempty"`
	SleeveType       string   `protobuf:"bytes,7,opt,name=sleeve_type,json=sleeveType,proto3" json:"sleeve_type,omitempty"`
	CareInstructions string   `protobuf:"bytes,8,opt,name=care_instructions,json=careInstructions,proto3" json:"care_instructions,omitempty"`
	SleeveLength     string   `protobuf:"bytes,9,opt,name=sleeve_length,json=sleeveLength,proto3" json:"sleeve_length,omitempty"`
	Color            string   `protobuf:"bytes,10,opt,name=color,proto3" json:"color,omitempty"`
	Material         string   `protobuf:"bytes,11,opt,name=material,proto3" json:"material,omitempty"`
	NetQuantity      string   `protobuf:"bytes,12,opt,name=net_quantity,json=netQuantity,proto3" json:"net_quantity,omitempty"`
	MarketerName     string   `protobuf:"bytes,13,opt,name=marketer_name,json=marketerName,proto3" json:"marketer_name,omitempty"`
	MarketerAddress  string   `protobuf:"bytes,14,opt,name=marketer_address,json=marketerAddress,proto3" json:"marketer_address,omitempty"`
	Name             string   `protobuf:"bytes,15,opt,name=name,proto3" json:"name,omitempty"`
	Lifestyle        string   `protobuf:"bytes,16,opt,name=lifestyle,proto3" json:"lifestyle,omitempty"`
	Sustainable      string   `protobuf:"bytes,17,opt,name=sustainable,proto3" json:"sustainable,omitempty"`
	BrandName        string   `protobuf:"bytes,18,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	PrimaryColorHex  string   `protobuf:"bytes,19,opt,name=primary_color_hex,json=primaryColorHex,proto3" json:"primary_color_hex,omitempty"`
}

func (x *Attributes) Reset() {
	*x = Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attributes) ProtoMessage() {}

func (x *Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attributes.ProtoReflect.Descriptor instead.
func (*Attributes) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{5}
}

func (x *Attributes) GetEssential() string {
	if x != nil {
		return x.Essential
	}
	return ""
}

func (x *Attributes) GetGender() []string {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *Attributes) GetPrimaryColor() string {
	if x != nil {
		return x.PrimaryColor
	}
	return ""
}

func (x *Attributes) GetPrimaryMaterial() string {
	if x != nil {
		return x.PrimaryMaterial
	}
	return ""
}

func (x *Attributes) GetNeckType() string {
	if x != nil {
		return x.NeckType
	}
	return ""
}

func (x *Attributes) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *Attributes) GetSleeveType() string {
	if x != nil {
		return x.SleeveType
	}
	return ""
}

func (x *Attributes) GetCareInstructions() string {
	if x != nil {
		return x.CareInstructions
	}
	return ""
}

func (x *Attributes) GetSleeveLength() string {
	if x != nil {
		return x.SleeveLength
	}
	return ""
}

func (x *Attributes) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Attributes) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *Attributes) GetNetQuantity() string {
	if x != nil {
		return x.NetQuantity
	}
	return ""
}

func (x *Attributes) GetMarketerName() string {
	if x != nil {
		return x.MarketerName
	}
	return ""
}

func (x *Attributes) GetMarketerAddress() string {
	if x != nil {
		return x.MarketerAddress
	}
	return ""
}

func (x *Attributes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attributes) GetLifestyle() string {
	if x != nil {
		return x.Lifestyle
	}
	return ""
}

func (x *Attributes) GetSustainable() string {
	if x != nil {
		return x.Sustainable
	}
	return ""
}

func (x *Attributes) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *Attributes) GetPrimaryColorHex() string {
	if x != nil {
		return x.PrimaryColorHex
	}
	return ""
}

type BrandInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *BrandInfo) Reset() {
	*x = BrandInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandInfo) ProtoMessage() {}

func (x *BrandInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandInfo.ProtoReflect.Descriptor instead.
func (*BrandInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{6}
}

func (x *BrandInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BrandInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CategoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CategoryInfo) Reset() {
	*x = CategoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryInfo) ProtoMessage() {}

func (x *CategoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryInfo.ProtoReflect.Descriptor instead.
func (*CategoryInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{7}
}

func (x *CategoryInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CategoryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AspectRatio string `protobuf:"bytes,1,opt,name=aspect_ratio,json=aspectRatio,proto3" json:"aspect_ratio,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	SecureUrl   string `protobuf:"bytes,3,opt,name=secure_url,json=secureUrl,proto3" json:"secure_url,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{8}
}

func (x *ImageInfo) GetAspectRatio() string {
	if x != nil {
		return x.AspectRatio
	}
	return ""
}

func (x *ImageInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImageInfo) GetSecureUrl() string {
	if x != nil {
		return x.SecureUrl
	}
	return ""
}

type ActionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Url         string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ProductSlug []string `protobuf:"bytes,3,rep,name=product_slug,json=productSlug,proto3" json:"product_slug,omitempty"`
}

func (x *ActionInfo) Reset() {
	*x = ActionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionInfo) ProtoMessage() {}

func (x *ActionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionInfo.ProtoReflect.Descriptor instead.
func (*ActionInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{9}
}

func (x *ActionInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ActionInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ActionInfo) GetProductSlug() []string {
	if x != nil {
		return x.ProductSlug
	}
	return nil
}

type AttributesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Essential        string   `protobuf:"bytes,1,opt,name=essential,proto3" json:"essential,omitempty"`
	Gender           []string `protobuf:"bytes,2,rep,name=gender,proto3" json:"gender,omitempty"`
	PrimaryColor     string   `protobuf:"bytes,3,opt,name=primary_color,json=primaryColor,proto3" json:"primary_color,omitempty"`
	PrimaryMaterial  string   `protobuf:"bytes,4,opt,name=primary_material,json=primaryMaterial,proto3" json:"primary_material,omitempty"`
	NeckType         string   `protobuf:"bytes,5,opt,name=neck_type,json=neckType,proto3" json:"neck_type,omitempty"`
	Pattern          string   `protobuf:"bytes,6,opt,name=pattern,proto3" json:"pattern,omitempty"`
	SleeveType       string   `protobuf:"bytes,7,opt,name=sleeve_type,json=sleeveType,proto3" json:"sleeve_type,omitempty"`
	CareInstructions string   `protobuf:"bytes,8,opt,name=care_instructions,json=careInstructions,proto3" json:"care_instructions,omitempty"`
	SleeveLength     string   `protobuf:"bytes,9,opt,name=sleeve_length,json=sleeveLength,proto3" json:"sleeve_length,omitempty"`
	Color            string   `protobuf:"bytes,10,opt,name=color,proto3" json:"color,omitempty"`
	Material         string   `protobuf:"bytes,11,opt,name=material,proto3" json:"material,omitempty"`
	NetQuantity      string   `protobuf:"bytes,12,opt,name=net_quantity,json=netQuantity,proto3" json:"net_quantity,omitempty"`
	MarketerName     string   `protobuf:"bytes,13,opt,name=marketer_name,json=marketerName,proto3" json:"marketer_name,omitempty"`
	MarketerAddress  string   `protobuf:"bytes,14,opt,name=marketer_address,json=marketerAddress,proto3" json:"marketer_address,omitempty"`
	Name             string   `protobuf:"bytes,15,opt,name=name,proto3" json:"name,omitempty"`
	Lifestyle        string   `protobuf:"bytes,16,opt,name=lifestyle,proto3" json:"lifestyle,omitempty"`
	Sustainable      string   `protobuf:"bytes,17,opt,name=sustainable,proto3" json:"sustainable,omitempty"`
	BrandName        string   `protobuf:"bytes,18,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	PrimaryColorHex  string   `protobuf:"bytes,19,opt,name=primary_color_hex,json=primaryColorHex,proto3" json:"primary_color_hex,omitempty"`
}

func (x *AttributesInfo) Reset() {
	*x = AttributesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributesInfo) ProtoMessage() {}

func (x *AttributesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributesInfo.ProtoReflect.Descriptor instead.
func (*AttributesInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{10}
}

func (x *AttributesInfo) GetEssential() string {
	if x != nil {
		return x.Essential
	}
	return ""
}

func (x *AttributesInfo) GetGender() []string {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *AttributesInfo) GetPrimaryColor() string {
	if x != nil {
		return x.PrimaryColor
	}
	return ""
}

func (x *AttributesInfo) GetPrimaryMaterial() string {
	if x != nil {
		return x.PrimaryMaterial
	}
	return ""
}

func (x *AttributesInfo) GetNeckType() string {
	if x != nil {
		return x.NeckType
	}
	return ""
}

func (x *AttributesInfo) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *AttributesInfo) GetSleeveType() string {
	if x != nil {
		return x.SleeveType
	}
	return ""
}

func (x *AttributesInfo) GetCareInstructions() string {
	if x != nil {
		return x.CareInstructions
	}
	return ""
}

func (x *AttributesInfo) GetSleeveLength() string {
	if x != nil {
		return x.SleeveLength
	}
	return ""
}

func (x *AttributesInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *AttributesInfo) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *AttributesInfo) GetNetQuantity() string {
	if x != nil {
		return x.NetQuantity
	}
	return ""
}

func (x *AttributesInfo) GetMarketerName() string {
	if x != nil {
		return x.MarketerName
	}
	return ""
}

func (x *AttributesInfo) GetMarketerAddress() string {
	if x != nil {
		return x.MarketerAddress
	}
	return ""
}

func (x *AttributesInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttributesInfo) GetLifestyle() string {
	if x != nil {
		return x.Lifestyle
	}
	return ""
}

func (x *AttributesInfo) GetSustainable() string {
	if x != nil {
		return x.Sustainable
	}
	return ""
}

func (x *AttributesInfo) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *AttributesInfo) GetPrimaryColorHex() string {
	if x != nil {
		return x.PrimaryColorHex
	}
	return ""
}

type PriceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *PriceInfo_Base      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Converted *PriceInfo_Converted `protobuf:"bytes,2,opt,name=converted,proto3" json:"converted,omitempty"`
}

func (x *PriceInfo) Reset() {
	*x = PriceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInfo) ProtoMessage() {}

func (x *PriceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInfo.ProtoReflect.Descriptor instead.
func (*PriceInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{11}
}

func (x *PriceInfo) GetBase() *PriceInfo_Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PriceInfo) GetConverted() *PriceInfo_Converted {
	if x != nil {
		return x.Converted
	}
	return nil
}

type ArticleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string                  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Size     string                  `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Seller   *ArticleInfo_SellerInfo `protobuf:"bytes,3,opt,name=seller,proto3" json:"seller,omitempty"`
	Store    *ArticleInfo_StoreInfo  `protobuf:"bytes,4,opt,name=store,proto3" json:"store,omitempty"`
	Quantity int32                   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price    *ArticleInfo_PriceInfo  `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *ArticleInfo) Reset() {
	*x = ArticleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo) ProtoMessage() {}

func (x *ArticleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{12}
}

func (x *ArticleInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ArticleInfo) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ArticleInfo) GetSeller() *ArticleInfo_SellerInfo {
	if x != nil {
		return x.Seller
	}
	return nil
}

func (x *ArticleInfo) GetStore() *ArticleInfo_StoreInfo {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *ArticleInfo) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ArticleInfo) GetPrice() *ArticleInfo_PriceInfo {
	if x != nil {
		return x.Price
	}
	return nil
}

type AvailabilityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableSizes     []*AvailabilityInfo_SizeAvailability `protobuf:"bytes,1,rep,name=available_sizes,json=availableSizes,proto3" json:"available_sizes,omitempty"`
	OtherStoreQuantity int32                                `protobuf:"varint,2,opt,name=other_store_quantity,json=otherStoreQuantity,proto3" json:"other_store_quantity,omitempty"`
	OutOfStock         bool                                 `protobuf:"varint,3,opt,name=out_of_stock,json=outOfStock,proto3" json:"out_of_stock,omitempty"`
	Deliverable        bool                                 `protobuf:"varint,4,opt,name=deliverable,proto3" json:"deliverable,omitempty"`
	IsValid            bool                                 `protobuf:"varint,5,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *AvailabilityInfo) Reset() {
	*x = AvailabilityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailabilityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityInfo) ProtoMessage() {}

func (x *AvailabilityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityInfo.ProtoReflect.Descriptor instead.
func (*AvailabilityInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{13}
}

func (x *AvailabilityInfo) GetAvailableSizes() []*AvailabilityInfo_SizeAvailability {
	if x != nil {
		return x.AvailableSizes
	}
	return nil
}

func (x *AvailabilityInfo) GetOtherStoreQuantity() int32 {
	if x != nil {
		return x.OtherStoreQuantity
	}
	return 0
}

func (x *AvailabilityInfo) GetOutOfStock() bool {
	if x != nil {
		return x.OutOfStock
	}
	return false
}

func (x *AvailabilityInfo) GetDeliverable() bool {
	if x != nil {
		return x.Deliverable
	}
	return false
}

func (x *AvailabilityInfo) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type CartItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand       *BrandInfo      `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Categories  []*CategoryInfo `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	Attributes  *AttributesInfo `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Images      []*ImageInfo    `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	Action      *ActionInfo     `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`
	ItemCode    string          `protobuf:"bytes,6,opt,name=item_code,json=itemCode,proto3" json:"item_code,omitempty"`
	XCustomJson string          `protobuf:"bytes,7,opt,name=_custom_json,json=CustomJson,proto3" json:"_custom_json,omitempty"`
	TeaserTag   string          `protobuf:"bytes,8,opt,name=teaser_tag,json=teaserTag,proto3" json:"teaser_tag,omitempty"`
}

func (x *CartItemInfo) Reset() {
	*x = CartItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartItemInfo) ProtoMessage() {}

func (x *CartItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartItemInfo.ProtoReflect.Descriptor instead.
func (*CartItemInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{14}
}

func (x *CartItemInfo) GetBrand() *BrandInfo {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *CartItemInfo) GetCategories() []*CategoryInfo {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *CartItemInfo) GetAttributes() *AttributesInfo {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CartItemInfo) GetImages() []*ImageInfo {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CartItemInfo) GetAction() *ActionInfo {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *CartItemInfo) GetItemCode() string {
	if x != nil {
		return x.ItemCode
	}
	return ""
}

func (x *CartItemInfo) GetXCustomJson() string {
	if x != nil {
		return x.XCustomJson
	}
	return ""
}

func (x *CartItemInfo) GetTeaserTag() string {
	if x != nil {
		return x.TeaserTag
	}
	return ""
}

type CustomOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManufacturingTime     int32  `protobuf:"varint,1,opt,name=manufacturing_time,json=manufacturingTime,proto3" json:"manufacturing_time,omitempty"`
	ManufacturingTimeUnit string `protobuf:"bytes,2,opt,name=manufacturing_time_unit,json=manufacturingTimeUnit,proto3" json:"manufacturing_time_unit,omitempty"`
	IsCustomOrder         bool   `protobuf:"varint,3,opt,name=is_custom_order,json=isCustomOrder,proto3" json:"is_custom_order,omitempty"`
}

func (x *CustomOrderInfo) Reset() {
	*x = CustomOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomOrderInfo) ProtoMessage() {}

func (x *CustomOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomOrderInfo.ProtoReflect.Descriptor instead.
func (*CustomOrderInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{15}
}

func (x *CustomOrderInfo) GetManufacturingTime() int32 {
	if x != nil {
		return x.ManufacturingTime
	}
	return 0
}

func (x *CustomOrderInfo) GetManufacturingTimeUnit() string {
	if x != nil {
		return x.ManufacturingTimeUnit
	}
	return ""
}

func (x *CustomOrderInfo) GetIsCustomOrder() bool {
	if x != nil {
		return x.IsCustomOrder
	}
	return false
}

type PricePerUnitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *PricePerUnitInfo_Base      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Converted *PricePerUnitInfo_Converted `protobuf:"bytes,2,opt,name=converted,proto3" json:"converted,omitempty"`
}

func (x *PricePerUnitInfo) Reset() {
	*x = PricePerUnitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricePerUnitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricePerUnitInfo) ProtoMessage() {}

func (x *PricePerUnitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricePerUnitInfo.ProtoReflect.Descriptor instead.
func (*PricePerUnitInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{16}
}

func (x *PricePerUnitInfo) GetBase() *PricePerUnitInfo_Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PricePerUnitInfo) GetConverted() *PricePerUnitInfo_Converted {
	if x != nil {
		return x.Converted
	}
	return nil
}

type DeliveryPromise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *DeliveryPromise_Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Formatted *DeliveryPromise_Formatted `protobuf:"bytes,2,opt,name=formatted,proto3" json:"formatted,omitempty"`
}

func (x *DeliveryPromise) Reset() {
	*x = DeliveryPromise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryPromise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryPromise) ProtoMessage() {}

func (x *DeliveryPromise) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryPromise.ProtoReflect.Descriptor instead.
func (*DeliveryPromise) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{17}
}

func (x *DeliveryPromise) GetTimestamp() *DeliveryPromise_Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DeliveryPromise) GetFormatted() *DeliveryPromise_Formatted {
	if x != nil {
		return x.Formatted
	}
	return nil
}

type ParentItemIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier     string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	ParentItemSize string `protobuf:"bytes,2,opt,name=parent_item_size,json=parentItemSize,proto3" json:"parent_item_size,omitempty"`
	ParentItemId   string `protobuf:"bytes,3,opt,name=parent_item_id,json=parentItemId,proto3" json:"parent_item_id,omitempty"`
}

func (x *ParentItemIdentifiers) Reset() {
	*x = ParentItemIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentItemIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentItemIdentifiers) ProtoMessage() {}

func (x *ParentItemIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentItemIdentifiers.ProtoReflect.Descriptor instead.
func (*ParentItemIdentifiers) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{18}
}

func (x *ParentItemIdentifiers) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ParentItemIdentifiers) GetParentItemSize() string {
	if x != nil {
		return x.ParentItemSize
	}
	return ""
}

func (x *ParentItemIdentifiers) GetParentItemId() string {
	if x != nil {
		return x.ParentItemId
	}
	return ""
}

type MoqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Minimum int32 `protobuf:"varint,1,opt,name=minimum,proto3" json:"minimum,omitempty"`
}

func (x *MoqInfo) Reset() {
	*x = MoqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoqInfo) ProtoMessage() {}

func (x *MoqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoqInfo.ProtoReflect.Descriptor instead.
func (*MoqInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{19}
}

func (x *MoqInfo) GetMinimum() int32 {
	if x != nil {
		return x.Minimum
	}
	return 0
}

type PromotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionsApplied []string `protobuf:"bytes,1,rep,name=promotions_applied,json=promotionsApplied,proto3" json:"promotions_applied,omitempty"`
}

func (x *PromotionInfo) Reset() {
	*x = PromotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionInfo) ProtoMessage() {}

func (x *PromotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionInfo.ProtoReflect.Descriptor instead.
func (*PromotionInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{20}
}

func (x *PromotionInfo) GetPromotionsApplied() []string {
	if x != nil {
		return x.PromotionsApplied
	}
	return nil
}

type CartItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product               *CartItemInfo          `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	BulkOffer             string                 `protobuf:"bytes,2,opt,name=bulk_offer,json=bulkOffer,proto3" json:"bulk_offer,omitempty"`
	Discount              string                 `protobuf:"bytes,3,opt,name=discount,proto3" json:"discount,omitempty"`
	Key                   string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Message               string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Coupon                string                 `protobuf:"bytes,6,opt,name=coupon,proto3" json:"coupon,omitempty"`
	PromoMeta             string                 `protobuf:"bytes,7,opt,name=promo_meta,json=promoMeta,proto3" json:"promo_meta,omitempty"`
	CustomOrder           *CustomOrderInfo       `protobuf:"bytes,8,opt,name=custom_order,json=customOrder,proto3" json:"custom_order,omitempty"`
	PricePerUnit          *PricePerUnitInfo      `protobuf:"bytes,9,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	Article               *ArticleInfo           `protobuf:"bytes,10,opt,name=article,proto3" json:"article,omitempty"`
	Quantity              int32                  `protobuf:"varint,11,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                 *PriceInfo             `protobuf:"bytes,12,opt,name=price,proto3" json:"price,omitempty"`
	Identifiers           *Identifiers           `protobuf:"bytes,13,opt,name=identifiers,proto3" json:"identifiers,omitempty"`
	CouponMessage         string                 `protobuf:"bytes,14,opt,name=coupon_message,json=couponMessage,proto3" json:"coupon_message,omitempty"`
	Availability          *AvailabilityInfo      `protobuf:"bytes,15,opt,name=availability,proto3" json:"availability,omitempty"`
	DeliveryPromise       *DeliveryPromise       `protobuf:"bytes,16,opt,name=delivery_promise,json=deliveryPromise,proto3" json:"delivery_promise,omitempty"`
	ParentItemIdentifiers *ParentItemIdentifiers `protobuf:"bytes,17,opt,name=parent_item_identifiers,json=parentItemIdentifiers,proto3" json:"parent_item_identifiers,omitempty"`
	IsSet                 bool                   `protobuf:"varint,18,opt,name=is_set,json=isSet,proto3" json:"is_set,omitempty"`
	Moq                   *MoqInfo               `protobuf:"bytes,19,opt,name=moq,proto3" json:"moq,omitempty"`
	PromotionsApplied     *PromotionInfo         `protobuf:"bytes,20,opt,name=promotions_applied,json=promotionsApplied,proto3" json:"promotions_applied,omitempty"`
}

func (x *CartItem) Reset() {
	*x = CartItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartItem) ProtoMessage() {}

func (x *CartItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartItem.ProtoReflect.Descriptor instead.
func (*CartItem) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{21}
}

func (x *CartItem) GetProduct() *CartItemInfo {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *CartItem) GetBulkOffer() string {
	if x != nil {
		return x.BulkOffer
	}
	return ""
}

func (x *CartItem) GetDiscount() string {
	if x != nil {
		return x.Discount
	}
	return ""
}

func (x *CartItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CartItem) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CartItem) GetCoupon() string {
	if x != nil {
		return x.Coupon
	}
	return ""
}

func (x *CartItem) GetPromoMeta() string {
	if x != nil {
		return x.PromoMeta
	}
	return ""
}

func (x *CartItem) GetCustomOrder() *CustomOrderInfo {
	if x != nil {
		return x.CustomOrder
	}
	return nil
}

func (x *CartItem) GetPricePerUnit() *PricePerUnitInfo {
	if x != nil {
		return x.PricePerUnit
	}
	return nil
}

func (x *CartItem) GetArticle() *ArticleInfo {
	if x != nil {
		return x.Article
	}
	return nil
}

func (x *CartItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CartItem) GetPrice() *PriceInfo {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *CartItem) GetIdentifiers() *Identifiers {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *CartItem) GetCouponMessage() string {
	if x != nil {
		return x.CouponMessage
	}
	return ""
}

func (x *CartItem) GetAvailability() *AvailabilityInfo {
	if x != nil {
		return x.Availability
	}
	return nil
}

func (x *CartItem) GetDeliveryPromise() *DeliveryPromise {
	if x != nil {
		return x.DeliveryPromise
	}
	return nil
}

func (x *CartItem) GetParentItemIdentifiers() *ParentItemIdentifiers {
	if x != nil {
		return x.ParentItemIdentifiers
	}
	return nil
}

func (x *CartItem) GetIsSet() bool {
	if x != nil {
		return x.IsSet
	}
	return false
}

func (x *CartItem) GetMoq() *MoqInfo {
	if x != nil {
		return x.Moq
	}
	return nil
}

func (x *CartItem) GetPromotionsApplied() *PromotionInfo {
	if x != nil {
		return x.PromotionsApplied
	}
	return nil
}

type CartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CartItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CartResponse) Reset() {
	*x = CartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartResponse) ProtoMessage() {}

func (x *CartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartResponse.ProtoReflect.Descriptor instead.
func (*CartResponse) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{22}
}

func (x *CartResponse) GetItems() []*CartItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type Identifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *Identifiers) Reset() {
	*x = Identifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifiers) ProtoMessage() {}

func (x *Identifiers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifiers.ProtoReflect.Descriptor instead.
func (*Identifiers) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{23}
}

func (x *Identifiers) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{24}
}

type PriceInfo_Base struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marked         int32  `protobuf:"varint,1,opt,name=marked,proto3" json:"marked,omitempty"`
	Effective      int32  `protobuf:"varint,2,opt,name=effective,proto3" json:"effective,omitempty"`
	SellingPrice   int32  `protobuf:"varint,3,opt,name=selling_price,json=sellingPrice,proto3" json:"selling_price,omitempty"`
	CurrencyCode   string `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencySymbol string `protobuf:"bytes,5,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
}

func (x *PriceInfo_Base) Reset() {
	*x = PriceInfo_Base{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceInfo_Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInfo_Base) ProtoMessage() {}

func (x *PriceInfo_Base) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInfo_Base.ProtoReflect.Descriptor instead.
func (*PriceInfo_Base) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{11, 0}
}

func (x *PriceInfo_Base) GetMarked() int32 {
	if x != nil {
		return x.Marked
	}
	return 0
}

func (x *PriceInfo_Base) GetEffective() int32 {
	if x != nil {
		return x.Effective
	}
	return 0
}

func (x *PriceInfo_Base) GetSellingPrice() int32 {
	if x != nil {
		return x.SellingPrice
	}
	return 0
}

func (x *PriceInfo_Base) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *PriceInfo_Base) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type PriceInfo_Converted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marked         int32  `protobuf:"varint,1,opt,name=marked,proto3" json:"marked,omitempty"`
	Effective      int32  `protobuf:"varint,2,opt,name=effective,proto3" json:"effective,omitempty"`
	SellingPrice   int32  `protobuf:"varint,3,opt,name=selling_price,json=sellingPrice,proto3" json:"selling_price,omitempty"`
	CurrencyCode   string `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencySymbol string `protobuf:"bytes,5,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
}

func (x *PriceInfo_Converted) Reset() {
	*x = PriceInfo_Converted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceInfo_Converted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInfo_Converted) ProtoMessage() {}

func (x *PriceInfo_Converted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInfo_Converted.ProtoReflect.Descriptor instead.
func (*PriceInfo_Converted) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{11, 1}
}

func (x *PriceInfo_Converted) GetMarked() int32 {
	if x != nil {
		return x.Marked
	}
	return 0
}

func (x *PriceInfo_Converted) GetEffective() int32 {
	if x != nil {
		return x.Effective
	}
	return 0
}

func (x *PriceInfo_Converted) GetSellingPrice() int32 {
	if x != nil {
		return x.SellingPrice
	}
	return 0
}

func (x *PriceInfo_Converted) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *PriceInfo_Converted) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type ArticleInfo_SellerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ArticleInfo_SellerInfo) Reset() {
	*x = ArticleInfo_SellerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo_SellerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo_SellerInfo) ProtoMessage() {}

func (x *ArticleInfo_SellerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo_SellerInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo_SellerInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ArticleInfo_SellerInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ArticleInfo_SellerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ArticleInfo_StoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Code      string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StoreCode string `protobuf:"bytes,4,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
}

func (x *ArticleInfo_StoreInfo) Reset() {
	*x = ArticleInfo_StoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo_StoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo_StoreInfo) ProtoMessage() {}

func (x *ArticleInfo_StoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo_StoreInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo_StoreInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{12, 1}
}

func (x *ArticleInfo_StoreInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ArticleInfo_StoreInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ArticleInfo_StoreInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArticleInfo_StoreInfo) GetStoreCode() string {
	if x != nil {
		return x.StoreCode
	}
	return ""
}

type ArticleInfo_PriceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *ArticleInfo_PriceInfo_Base      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Converted *ArticleInfo_PriceInfo_Converted `protobuf:"bytes,2,opt,name=converted,proto3" json:"converted,omitempty"`
}

func (x *ArticleInfo_PriceInfo) Reset() {
	*x = ArticleInfo_PriceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo_PriceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo_PriceInfo) ProtoMessage() {}

func (x *ArticleInfo_PriceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo_PriceInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo_PriceInfo) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{12, 2}
}

func (x *ArticleInfo_PriceInfo) GetBase() *ArticleInfo_PriceInfo_Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ArticleInfo_PriceInfo) GetConverted() *ArticleInfo_PriceInfo_Converted {
	if x != nil {
		return x.Converted
	}
	return nil
}

type ArticleInfo_PriceInfo_Base struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marked         int32  `protobuf:"varint,1,opt,name=marked,proto3" json:"marked,omitempty"`
	Effective      int32  `protobuf:"varint,2,opt,name=effective,proto3" json:"effective,omitempty"`
	Selling        int32  `protobuf:"varint,3,opt,name=selling,proto3" json:"selling,omitempty"`
	CurrencyCode   string `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencySymbol string `protobuf:"bytes,5,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
}

func (x *ArticleInfo_PriceInfo_Base) Reset() {
	*x = ArticleInfo_PriceInfo_Base{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo_PriceInfo_Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo_PriceInfo_Base) ProtoMessage() {}

func (x *ArticleInfo_PriceInfo_Base) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo_PriceInfo_Base.ProtoReflect.Descriptor instead.
func (*ArticleInfo_PriceInfo_Base) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{12, 2, 0}
}

func (x *ArticleInfo_PriceInfo_Base) GetMarked() int32 {
	if x != nil {
		return x.Marked
	}
	return 0
}

func (x *ArticleInfo_PriceInfo_Base) GetEffective() int32 {
	if x != nil {
		return x.Effective
	}
	return 0
}

func (x *ArticleInfo_PriceInfo_Base) GetSelling() int32 {
	if x != nil {
		return x.Selling
	}
	return 0
}

func (x *ArticleInfo_PriceInfo_Base) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *ArticleInfo_PriceInfo_Base) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type ArticleInfo_PriceInfo_Converted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marked         int32  `protobuf:"varint,1,opt,name=marked,proto3" json:"marked,omitempty"`
	Effective      int32  `protobuf:"varint,2,opt,name=effective,proto3" json:"effective,omitempty"`
	Selling        int32  `protobuf:"varint,3,opt,name=selling,proto3" json:"selling,omitempty"`
	CurrencyCode   string `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencySymbol string `protobuf:"bytes,5,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
}

func (x *ArticleInfo_PriceInfo_Converted) Reset() {
	*x = ArticleInfo_PriceInfo_Converted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo_PriceInfo_Converted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo_PriceInfo_Converted) ProtoMessage() {}

func (x *ArticleInfo_PriceInfo_Converted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo_PriceInfo_Converted.ProtoReflect.Descriptor instead.
func (*ArticleInfo_PriceInfo_Converted) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{12, 2, 1}
}

func (x *ArticleInfo_PriceInfo_Converted) GetMarked() int32 {
	if x != nil {
		return x.Marked
	}
	return 0
}

func (x *ArticleInfo_PriceInfo_Converted) GetEffective() int32 {
	if x != nil {
		return x.Effective
	}
	return 0
}

func (x *ArticleInfo_PriceInfo_Converted) GetSelling() int32 {
	if x != nil {
		return x.Selling
	}
	return 0
}

func (x *ArticleInfo_PriceInfo_Converted) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *ArticleInfo_PriceInfo_Converted) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type AvailabilityInfo_SizeAvailability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAvailable bool   `protobuf:"varint,1,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	Display     string `protobuf:"bytes,2,opt,name=display,proto3" json:"display,omitempty"`
	Value       string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AvailabilityInfo_SizeAvailability) Reset() {
	*x = AvailabilityInfo_SizeAvailability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailabilityInfo_SizeAvailability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityInfo_SizeAvailability) ProtoMessage() {}

func (x *AvailabilityInfo_SizeAvailability) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityInfo_SizeAvailability.ProtoReflect.Descriptor instead.
func (*AvailabilityInfo_SizeAvailability) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AvailabilityInfo_SizeAvailability) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *AvailabilityInfo_SizeAvailability) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

func (x *AvailabilityInfo_SizeAvailability) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PricePerUnitInfo_Base struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marked         int32  `protobuf:"varint,1,opt,name=marked,proto3" json:"marked,omitempty"`
	Effective      int32  `protobuf:"varint,2,opt,name=effective,proto3" json:"effective,omitempty"`
	SellingPrice   int32  `protobuf:"varint,3,opt,name=selling_price,json=sellingPrice,proto3" json:"selling_price,omitempty"`
	CurrencyCode   string `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencySymbol string `protobuf:"bytes,5,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
}

func (x *PricePerUnitInfo_Base) Reset() {
	*x = PricePerUnitInfo_Base{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricePerUnitInfo_Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricePerUnitInfo_Base) ProtoMessage() {}

func (x *PricePerUnitInfo_Base) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricePerUnitInfo_Base.ProtoReflect.Descriptor instead.
func (*PricePerUnitInfo_Base) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{16, 0}
}

func (x *PricePerUnitInfo_Base) GetMarked() int32 {
	if x != nil {
		return x.Marked
	}
	return 0
}

func (x *PricePerUnitInfo_Base) GetEffective() int32 {
	if x != nil {
		return x.Effective
	}
	return 0
}

func (x *PricePerUnitInfo_Base) GetSellingPrice() int32 {
	if x != nil {
		return x.SellingPrice
	}
	return 0
}

func (x *PricePerUnitInfo_Base) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *PricePerUnitInfo_Base) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type PricePerUnitInfo_Converted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marked         int32  `protobuf:"varint,1,opt,name=marked,proto3" json:"marked,omitempty"`
	Effective      int32  `protobuf:"varint,2,opt,name=effective,proto3" json:"effective,omitempty"`
	SellingPrice   int32  `protobuf:"varint,3,opt,name=selling_price,json=sellingPrice,proto3" json:"selling_price,omitempty"`
	CurrencyCode   string `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencySymbol string `protobuf:"bytes,5,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
}

func (x *PricePerUnitInfo_Converted) Reset() {
	*x = PricePerUnitInfo_Converted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricePerUnitInfo_Converted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricePerUnitInfo_Converted) ProtoMessage() {}

func (x *PricePerUnitInfo_Converted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricePerUnitInfo_Converted.ProtoReflect.Descriptor instead.
func (*PricePerUnitInfo_Converted) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{16, 1}
}

func (x *PricePerUnitInfo_Converted) GetMarked() int32 {
	if x != nil {
		return x.Marked
	}
	return 0
}

func (x *PricePerUnitInfo_Converted) GetEffective() int32 {
	if x != nil {
		return x.Effective
	}
	return 0
}

func (x *PricePerUnitInfo_Converted) GetSellingPrice() int32 {
	if x != nil {
		return x.SellingPrice
	}
	return 0
}

func (x *PricePerUnitInfo_Converted) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *PricePerUnitInfo_Converted) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type DeliveryPromise_Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min int64 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max int64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *DeliveryPromise_Timestamp) Reset() {
	*x = DeliveryPromise_Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryPromise_Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryPromise_Timestamp) ProtoMessage() {}

func (x *DeliveryPromise_Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryPromise_Timestamp.ProtoReflect.Descriptor instead.
func (*DeliveryPromise_Timestamp) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{17, 0}
}

func (x *DeliveryPromise_Timestamp) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *DeliveryPromise_Timestamp) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type DeliveryPromise_Formatted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min string `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max string `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *DeliveryPromise_Formatted) Reset() {
	*x = DeliveryPromise_Formatted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cart_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryPromise_Formatted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryPromise_Formatted) ProtoMessage() {}

func (x *DeliveryPromise_Formatted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cart_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryPromise_Formatted.ProtoReflect.Descriptor instead.
func (*DeliveryPromise_Formatted) Descriptor() ([]byte, []int) {
	return file_proto_cart_proto_rawDescGZIP(), []int{17, 1}
}

func (x *DeliveryPromise_Formatted) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *DeliveryPromise_Formatted) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

var File_proto_cart_proto protoreflect.FileDescriptor

var file_proto_cart_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x18, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x05, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x08, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x51, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x22, 0x80, 0x05, 0x0a, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x65, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c,
	0x65, 0x65, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x65,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6c,
	0x65, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x65, 0x78, 0x22, 0x31,
	0x0a, 0x09, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x34, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x55, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x22,
	0x84, 0x05, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x29, 0x0a,
	0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x63, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x68, 0x65, 0x78, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x48, 0x65, 0x78, 0x22, 0xe7, 0x03, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x1a, 0xaf, 0x01, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x1a, 0xb4, 0x01, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x89, 0x07, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x72,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x32, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x64, 0x0a, 0x09, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x1a, 0xe9, 0x03, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x1a, 0xa4, 0x01, 0x0a, 0x04, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x1a, 0xa9, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xe4, 0x02, 0x0a,
	0x10, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x58, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x61, 0x72,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x1a, 0x65, 0x0a, 0x10,
	0x53, 0x69, 0x7a, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xf8, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2f, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x30,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x22, 0xa0,
	0x01, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0xfc, 0x03, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x1a, 0xaf, 0x01, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x1a, 0xb4, 0x01, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x81, 0x02, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x09, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x64, 0x1a, 0x2f, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x1a, 0x2f, 0x0a, 0x09, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x61, 0x78, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x23,
	0x0a, 0x07, 0x4d, 0x6f, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x22, 0x3e, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x22, 0xc1, 0x07, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x34, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6c, 0x6b,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x72,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x07,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x0b, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x42, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x52, 0x0f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x17, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x52, 0x15, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x53,
	0x65, 0x74, 0x12, 0x27, 0x0a, 0x03, 0x6d, 0x6f, 0x71, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x6f, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x6d, 0x6f, 0x71, 0x12, 0x4a, 0x0a, 0x12, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x22, 0x3c, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2d, 0x0a, 0x0b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x49, 0x0a,
	0x0b, 0x43, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x74, 0x12, 0x13, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x70, 0x62, 0x2f, 0x63,
	0x61, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_cart_proto_rawDescOnce sync.Once
	file_proto_cart_proto_rawDescData = file_proto_cart_proto_rawDesc
)

func file_proto_cart_proto_rawDescGZIP() []byte {
	file_proto_cart_proto_rawDescOnce.Do(func() {
		file_proto_cart_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_cart_proto_rawDescData)
	})
	return file_proto_cart_proto_rawDescData
}

var file_proto_cart_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_cart_proto_goTypes = []interface{}{
	(*CartId)(nil),                            // 0: cart_service.CartId
	(*Brand)(nil),                             // 1: cart_service.Brand
	(*Category)(nil),                          // 2: cart_service.Category
	(*Image)(nil),                             // 3: cart_service.Image
	(*Action)(nil),                            // 4: cart_service.Action
	(*Attributes)(nil),                        // 5: cart_service.Attributes
	(*BrandInfo)(nil),                         // 6: cart_service.BrandInfo
	(*CategoryInfo)(nil),                      // 7: cart_service.CategoryInfo
	(*ImageInfo)(nil),                         // 8: cart_service.ImageInfo
	(*ActionInfo)(nil),                        // 9: cart_service.ActionInfo
	(*AttributesInfo)(nil),                    // 10: cart_service.AttributesInfo
	(*PriceInfo)(nil),                         // 11: cart_service.PriceInfo
	(*ArticleInfo)(nil),                       // 12: cart_service.ArticleInfo
	(*AvailabilityInfo)(nil),                  // 13: cart_service.AvailabilityInfo
	(*CartItemInfo)(nil),                      // 14: cart_service.CartItemInfo
	(*CustomOrderInfo)(nil),                   // 15: cart_service.CustomOrderInfo
	(*PricePerUnitInfo)(nil),                  // 16: cart_service.PricePerUnitInfo
	(*DeliveryPromise)(nil),                   // 17: cart_service.DeliveryPromise
	(*ParentItemIdentifiers)(nil),             // 18: cart_service.ParentItemIdentifiers
	(*MoqInfo)(nil),                           // 19: cart_service.MoqInfo
	(*PromotionInfo)(nil),                     // 20: cart_service.PromotionInfo
	(*CartItem)(nil),                          // 21: cart_service.CartItem
	(*CartResponse)(nil),                      // 22: cart_service.CartResponse
	(*Identifiers)(nil),                       // 23: cart_service.Identifiers
	(*Empty)(nil),                             // 24: cart_service.Empty
	(*PriceInfo_Base)(nil),                    // 25: cart_service.PriceInfo.Base
	(*PriceInfo_Converted)(nil),               // 26: cart_service.PriceInfo.Converted
	(*ArticleInfo_SellerInfo)(nil),            // 27: cart_service.ArticleInfo.SellerInfo
	(*ArticleInfo_StoreInfo)(nil),             // 28: cart_service.ArticleInfo.StoreInfo
	(*ArticleInfo_PriceInfo)(nil),             // 29: cart_service.ArticleInfo.PriceInfo
	(*ArticleInfo_PriceInfo_Base)(nil),        // 30: cart_service.ArticleInfo.PriceInfo.Base
	(*ArticleInfo_PriceInfo_Converted)(nil),   // 31: cart_service.ArticleInfo.PriceInfo.Converted
	(*AvailabilityInfo_SizeAvailability)(nil), // 32: cart_service.AvailabilityInfo.SizeAvailability
	(*PricePerUnitInfo_Base)(nil),             // 33: cart_service.PricePerUnitInfo.Base
	(*PricePerUnitInfo_Converted)(nil),        // 34: cart_service.PricePerUnitInfo.Converted
	(*DeliveryPromise_Timestamp)(nil),         // 35: cart_service.DeliveryPromise.Timestamp
	(*DeliveryPromise_Formatted)(nil),         // 36: cart_service.DeliveryPromise.Formatted
}
var file_proto_cart_proto_depIdxs = []int32{
	25, // 0: cart_service.PriceInfo.base:type_name -> cart_service.PriceInfo.Base
	26, // 1: cart_service.PriceInfo.converted:type_name -> cart_service.PriceInfo.Converted
	27, // 2: cart_service.ArticleInfo.seller:type_name -> cart_service.ArticleInfo.SellerInfo
	28, // 3: cart_service.ArticleInfo.store:type_name -> cart_service.ArticleInfo.StoreInfo
	29, // 4: cart_service.ArticleInfo.price:type_name -> cart_service.ArticleInfo.PriceInfo
	32, // 5: cart_service.AvailabilityInfo.available_sizes:type_name -> cart_service.AvailabilityInfo.SizeAvailability
	6,  // 6: cart_service.CartItemInfo.brand:type_name -> cart_service.BrandInfo
	7,  // 7: cart_service.CartItemInfo.categories:type_name -> cart_service.CategoryInfo
	10, // 8: cart_service.CartItemInfo.attributes:type_name -> cart_service.AttributesInfo
	8,  // 9: cart_service.CartItemInfo.images:type_name -> cart_service.ImageInfo
	9,  // 10: cart_service.CartItemInfo.action:type_name -> cart_service.ActionInfo
	33, // 11: cart_service.PricePerUnitInfo.base:type_name -> cart_service.PricePerUnitInfo.Base
	34, // 12: cart_service.PricePerUnitInfo.converted:type_name -> cart_service.PricePerUnitInfo.Converted
	35, // 13: cart_service.DeliveryPromise.timestamp:type_name -> cart_service.DeliveryPromise.Timestamp
	36, // 14: cart_service.DeliveryPromise.formatted:type_name -> cart_service.DeliveryPromise.Formatted
	14, // 15: cart_service.CartItem.product:type_name -> cart_service.CartItemInfo
	15, // 16: cart_service.CartItem.custom_order:type_name -> cart_service.CustomOrderInfo
	16, // 17: cart_service.CartItem.price_per_unit:type_name -> cart_service.PricePerUnitInfo
	12, // 18: cart_service.CartItem.article:type_name -> cart_service.ArticleInfo
	11, // 19: cart_service.CartItem.price:type_name -> cart_service.PriceInfo
	23, // 20: cart_service.CartItem.identifiers:type_name -> cart_service.Identifiers
	13, // 21: cart_service.CartItem.availability:type_name -> cart_service.AvailabilityInfo
	17, // 22: cart_service.CartItem.delivery_promise:type_name -> cart_service.DeliveryPromise
	18, // 23: cart_service.CartItem.parent_item_identifiers:type_name -> cart_service.ParentItemIdentifiers
	19, // 24: cart_service.CartItem.moq:type_name -> cart_service.MoqInfo
	20, // 25: cart_service.CartItem.promotions_applied:type_name -> cart_service.PromotionInfo
	21, // 26: cart_service.CartResponse.items:type_name -> cart_service.CartItem
	30, // 27: cart_service.ArticleInfo.PriceInfo.base:type_name -> cart_service.ArticleInfo.PriceInfo.Base
	31, // 28: cart_service.ArticleInfo.PriceInfo.converted:type_name -> cart_service.ArticleInfo.PriceInfo.Converted
	24, // 29: cart_service.CartService.GetCart:input_type -> cart_service.Empty
	22, // 30: cart_service.CartService.GetCart:output_type -> cart_service.CartResponse
	30, // [30:31] is the sub-list for method output_type
	29, // [29:30] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_proto_cart_proto_init() }
func file_proto_cart_proto_init() {
	if File_proto_cart_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_cart_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailabilityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricePerUnitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryPromise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentItemIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceInfo_Base); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceInfo_Converted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo_SellerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo_StoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo_PriceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo_PriceInfo_Base); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo_PriceInfo_Converted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailabilityInfo_SizeAvailability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricePerUnitInfo_Base); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricePerUnitInfo_Converted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryPromise_Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cart_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryPromise_Formatted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_cart_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cart_proto_goTypes,
		DependencyIndexes: file_proto_cart_proto_depIdxs,
		MessageInfos:      file_proto_cart_proto_msgTypes,
	}.Build()
	File_proto_cart_proto = out.File
	file_proto_cart_proto_rawDesc = nil
	file_proto_cart_proto_goTypes = nil
	file_proto_cart_proto_depIdxs = nil
}
